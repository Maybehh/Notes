-moz-border-image:url(border.png) 30 30 round; /* 老的 Firefox */
-webkit-border-image:url(border.png) 30 30 round; /* Safari 和 Chrome */
-o-border-image:url(border.png) 30 30 round; /* Opera */

边框不继承：
border-image 属性是一个简写属性，用于设置以下属性：
border-image-source	用在边框的图片的路径。	
border-image-slice	图片边框向内偏移。	
border-image-width	图片边框的宽度。	
border-image-outset	边框图像区域超出边框的量。	
border-image-repeat	图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)
如果省略值，会设置其默认值

border-image-source 属性规定要使用的图像，代替 border-style 属性中设置的边框样式
none	不使用图像
image	用作边框的图像的路径  border-image-source: url(border.png);

border-image-slice 属性规定图像边框的向内偏移（在原来的图片哪里写“井”）
将border-image分成了九部分：border-top-image,border-right-image,border-bottom-image,border-left-image,border-top-right-image,
border-bottom-right-image,border-bottom-left-image,border-top-left-image八个边块和最中间的内容区域
规定图像的上、右、下、左侧边缘的向内偏移，图像被分割为九个区域：四个角、四条边以及一个中间区域。除非使用了关键词 fill，否则中间的图像部分会被丢弃
如果省略第四个数值/百分比，则与第二个值相同。如果省略第三个值，则与第一个值相同。如果省略第二个值，则与第一个值相同
number	数字值，代表图像中像素（如果是光栅图像）或矢量坐标（如果是矢量图像）（不加单位，单位为像素）
%	相对于图像尺寸的百分比值：图像的宽度影响水平偏移，高度影响垂直偏移
fill	保留边框图像的中间部分

border-image-width 属性规定图像边框的宽度
border-image-width 属性的四个之规定将边框图像分割为九个部分的偏移。它们代表了从区域的上、右、下、左侧向内的距离。如果忽略第四个值，则与第二个值相同。
如果省略第三个值，则与第一个值相同。如果省略第二个值，则与第一个值相同。不允许任何负值作为 border-image-width 值
number	代表对应的 border-width 的倍数。
%	参考边框图像区域的尺寸：区域的高度影响水平偏移，宽度影响垂直偏移。
auto	如果规定该属性，则宽度为对应的图像切片的固有宽度

border-image-outset 属性规定边框图像超过边框盒的量。不允许任何负值
length	
number	代表对应的 border-width 的倍数

border-image-repeat 属性规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）
规定如何延展和铺排边框图像的边缘和中间部分。因此，您可以规定两个值。如果省略第二个值，则采取与第一个值相同的值
stretch	拉伸图像来填充区域
repeat	平铺（重复）图像来填充区域（从中间向两侧按原边框图片大小平铺，因此可能图案会不完整）
round	类似 repeat 值。如果无法完整平铺所有图像，则对图像进行缩放以适应区域
（图像从中间向两侧平铺，会调整背景图片大小保证图像完整，可能有多个，但每个都是完整的）

border-radius 属性是一个简写属性，用于设置四个 border-*-radius 属性
border-radius: 1-4 length|%（四个角按顺序设置水平半径） / 1-4 length|%（四个角按顺序设置垂直半径）;
border-radius: 2em 1em 4em / 0.5em 3em;
等价于：
border-top-left-radius: 2em 0.5em;
border-top-right-radius: 1em 3em;
border-bottom-right-radius: 4em 0.5em;
border-bottom-left-radius: 1em 3em;

border-bottom-left-radius 属性的长度值和百分比值定义四分之一椭圆（定义外部边框边缘的边角形状）的半径（radii）。
第一个值是水平半径，第二个值是垂直半径。如果省略第二个值，则复制第一个值。
如果长度为零，则边角为方形，而不是圆形。水平半径的百分比值参考边框盒的宽度，而垂直半径的百分比值参考边框盒的高度

box-shadow 属性向框添加一个或多个阴影
box-shadow: h-shadow v-shadow blur spread color inset;
h-shadow	必需。水平阴影的位置。允许负值(左上右上等阴影效果）
v-shadow	必需。垂直阴影的位置。允许负值
blur	可选。模糊距离（大小，单位px）
spread	可选。阴影的尺寸
color	可选。阴影的颜色。请参阅 CSS 颜色值
inset	可选。将外部阴影 (outset) 改为内部阴影

background-size 属性规定背景图像的尺寸
length	设置背景图像的高度和宽度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 "auto"。
percentage	以父元素的百分比来设置背景图像的宽度和高度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 "auto"。
cover 把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区域中。
contain	把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域
在no-repeat情况下，如果容器宽高比与图片宽高比不同，
cover：图片宽高比不变、铺满整个容器的宽高，而图片多出的部分则会被截掉；
contain:图片自身的宽高比不变，缩放至图片自身能完全显示出来，所以容器会有留白区域；
在repeat情况下：cover:与上述相同；contain:容器内至少有一张完整的图，容器留白区域则平铺背景图，铺不下的再裁掉

background-origin 属性规定 background-position 属性相对于什么位置来定位
注释：如果背景图像的 background-attachment 属性为 "fixed"，则该属性没有效果
background-origin: padding-box|border-box|content-box;

background-clip 属性规定背景的绘制区域
background-clip: border-box|padding-box|content-box;

设置多重背景：background-repeat:no repeat; 和 background-position合用

text-shadow 属性向文本设置阴影
text-shadow: h-shadow v-shadow blur color;

hanging-punctuation 属性规定把标点符号放在文本整行的开头还是结尾的行框之外
hanging-punctuation: none|first|last|allow-end|force-end;
none	不在文本整行的开头还是结尾的行框之外放置标签符号
first	标点附着在首行开始边缘之外
last	标点附着在首行结尾边缘之外
force-end 行尾的停止符或逗号挂起
allow-end 如果在对齐之前不适合，则行尾的停止符或逗号会挂起

punctuation-trim 属性规定如果标点位于行开头或结尾处，或者临近另一个全角标点符号，是否对标点符号进行修剪
none	请勿修剪打开或关闭标点符号
start	在每一行的开头放置开头标点符号
end	在每一行的末尾修剪结束标点符号
allow-end	如果另有不适合之前的理由，修剪每行末尾的结束标点符号。
adjacent	若以前相邻字符修剪开口punctuation是一个全形开口，中间或结束标点符号，或表意文字空间。
修剪结束标点符号，如果下一个相邻的字符是一个全形关闭或中间punctuation，或表意文字空间

text-emphasis 属性是简写属性，用于在一个声明中设置 text-emphasis-style 和 text-emphasis-color
text-emphasis: text-emphasis-style text-emphasis-color;

text-justify 属性规定当 text-align 被设置为justify时的齐行方法（缩放窗口会自行调整）
auto	浏览器决定齐行算法
none	禁用齐行
inter-word	增加/减少单词间的间隔
inter-ideograph	用表意文本来排齐内容
inter-cluster	只对不包含内部单词间隔的内容（比如亚洲语系）进行排齐
distribute	类似报纸版面，除了在东亚语系中最后一行是不齐行的
kashida	通过拉伸字符来排齐内容

text-outline 属性规定文本轮廓
text-outline: thickness blur color;
thickness	必需。轮廓的粗细
blur	可选。轮廓的模糊半径
color	必需。轮廓的颜色

text-overflow 属性规定当文本溢出包含元素时发生的事情
clip	修剪文本
ellipsis	显示省略符号来代表被修剪的文本
string	使用给定的字符串来代表被修剪的文本

text-wrap 属性规定文本的换行（折行）规则
normal	只在允许的换行点进行换行。
none	不换行。元素无法容纳的文本会溢出。
unrestricted	在任意两个字符间换行。
suppress	压缩元素中的换行。浏览器只在行中没有其他有效换行点时进行换行

word-break 属性规定自动换行的处理方法(规定非中日韩文本的换行规则)(会在同行进行断词）
normal	使用浏览器默认的换行规则
break-all	允许在单词内换行(没有连字符，单词直接折两半）
keep-all	只能在半角空格或连字符处换行

word-wrap 属性允许长单词或 URL 地址换行到下一行（换到下一行，再断）
normal	只在允许的断字点换行（浏览器保持默认处理）
break-word	在长单词或 URL 地址内部进行换行

在 CSS3 之前，web 设计师必须使用已在用户计算机上安装好的字体
将该字体文件存放到 web 服务器上，它会在需要时被自动下载到用户的计算机上。您“自己的”的字体是在 CSS3 @font-face 规则中定义的
@font-face{
  font-family: myFirstFont;
  src: url('Sansation_Light.ttf'),
       url('Sansation_Light.eot'); /* IE9+ */
}

div{
  font-family:myFirstFont;
}
font-family 必需。规定字体的名称。
src	必需。定义字体文件的 URL。
font-stretch	normal|condensed|ultra-condensed|extra-condensed|semi-condensed|expanded|semi-expanded|extra-expanded|ultra-expanded
可选。定义如何拉伸字体。默认是 "normal"。
font-style	normal|italic|oblique可选。定义字体的样式。默认是 "normal"。
font-weight	normal|bold|100|200|300|400|500|600|700|800|900可选。定义字体的粗细。默认是 "normal"。
unicode-range	unicode-range	可选。定义字体支持的 UNICODE 字符范围。默认是 "U+0-10FFFF"

必须为粗体文本添加另一个包含描述符的 @font-face（因为引用的是分类的小字体，所以需要再引用，直接引用Sansation.ttf就不用）
@font-face
{
font-family: myFirstFont;
src: url('/example/css3/Sansation_Light.ttf')
    ,url('/example/css3/Sansation_Light.eot'); /* IE9+ */
}
@font-face
{
font-family: myFirstFont;
src: url('/example/css3/Sansation_Bold.ttf')
    ,url('/example/css3/Sansation_Bold.eot'); /* IE9+ */
font-weight:bold;
}

transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜
matrix(n,n,n,n,n,n)	定义 2D 转换，使用六个值的矩阵。
translate(x,y)	定义 2D 转换，沿着 X 和 Y 轴移动元素。
translateX(n)	定义 2D 转换，沿着 X 轴移动元素。
translateY(n)	定义 2D 转换，沿着 Y 轴移动元素。
scale(x,y)	定义 2D 缩放转换，改变元素的宽度和高度。
scaleX(n)	定义 2D 缩放转换，改变元素的宽度。
scaleY(n)	定义 2D 缩放转换，改变元素的高度。
rotate(angle)	定义 2D 旋转，在参数中规定角度。
skew(x-angle,y-angle)	定义 2D 倾斜转换，沿着 X 和 Y 轴
skewX(angle)	定义 2D 倾斜转换，沿着 X 轴
skewY(angle)	定义 2D 倾斜转换，沿着 Y 轴

transform-origin 属性允许您改变被转换元素的位置(基点旋转)
默认值50% 50%
x-axis	定义视图被置于 X 轴的何处。可能的值：left|center|right|length|%
y-axis	定义视图被置于 Y 轴的何处。可能的值：top|center|bottom|length|%
z-axis	定义视图被置于 Z 轴的何处。可能的值：length

transform-style 属性规定如何在 3D 空间中呈现被嵌套的元素
注释：该属性必须与 transform 属性一同使用
flat	子元素将不保留其 3D 位置 如果选择平面，元素的子元素将不会有 3D 的遮挡关系（子元素会全部显示出来，不遮盖）
preserve-3d	子元素将保留其 3D 位置（会遮盖）

perspective 属性定义 3D 元素距视图的距离，以像素计。该属性允许您改变 3D 元素查看 3D 元素的视图(见书签）
当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身
number	元素距离视图的距离，以像素计
none	默认值。与 0 相同。不设置透视
如果值为0或为负数，则不应用透视变换
perspective属性设置镜头到元素平面的距离。所有元素都是放置在z=0的平面上。比如perspective(300px)表示，镜头距离元素表面的位置是300像素
perspective-origin 和perspective特性被附接到在3维空间变换的孩子的父母，不同于perspective()被变换，其被放置在元件上变换函数

perspective-origin 属性定义 3D 元素所基于的 X 轴和 Y 轴。该属性允许您改变 3D 元素的底部位置（在顶部根据位置调整“机位”拍物体）
当为元素定义 perspective-origin 属性时，其子元素会获得透视效果，而不是元素本身
默认值：	50% 50%
perspective-origin: x-axis y-axis;
x-axis	定义视图被置于 X 轴的何处。可能的值：left（0%）|center（关键字是50%百分比值的快捷方式）|right（100%）|length|%
y-axis	定义视图被置于 Y 轴的何处。可能的值：top（0%）|center（关键字是50%百分比值的快捷方式）|bottom（100%）|length|%

backface-visibility 属性定义当元素不面向屏幕时是否可见。如果在旋转元素不希望看到其背面时，该属性很有用（背面向屏幕才有效，rotateY(大于90deg）)
backface-visibility: visible|hidden;

matrix(n,n,n,n,n,n)	定义 2D 转换，使用六个值的矩阵
matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)	定义 3D 转换，使用 16 个值的 4x4 矩阵

transition 属性是一个简写属性，用于设置四个过渡属性：
transition-property
transition-duration
transition-timing-function
transition-delay

transition-property 属性规定应用过渡效果的 CSS 属性的名称。（当指定的 CSS 属性改变时，过渡效果将开始）
none	没有属性会获得过渡效果。
all	所有属性都将获得过渡效果。
property	定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔

