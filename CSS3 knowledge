-moz-border-image:url(border.png) 30 30 round; /* 老的 Firefox */
-webkit-border-image:url(border.png) 30 30 round; /* Safari 和 Chrome */
-o-border-image:url(border.png) 30 30 round; /* Opera */

边框不继承：
border-image 属性是一个简写属性，用于设置以下属性：
border-image-source	用在边框的图片的路径。	
border-image-slice	图片边框向内偏移。	
border-image-width	图片边框的宽度。	
border-image-outset	边框图像区域超出边框的量。	
border-image-repeat	图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)
如果省略值，会设置其默认值

border-image-source 属性规定要使用的图像，代替 border-style 属性中设置的边框样式
none	不使用图像
image	用作边框的图像的路径  border-image-source: url(border.png);

border-image-slice 属性规定图像边框的向内偏移（在原来的图片哪里写“井”）
将border-image分成了九部分：border-top-image,border-right-image,border-bottom-image,border-left-image,border-top-right-image,
border-bottom-right-image,border-bottom-left-image,border-top-left-image八个边块和最中间的内容区域
规定图像的上、右、下、左侧边缘的向内偏移，图像被分割为九个区域：四个角、四条边以及一个中间区域。除非使用了关键词 fill，否则中间的图像部分会被丢弃
如果省略第四个数值/百分比，则与第二个值相同。如果省略第三个值，则与第一个值相同。如果省略第二个值，则与第一个值相同
number	数字值，代表图像中像素（如果是光栅图像）或矢量坐标（如果是矢量图像）（不加单位，单位为像素）
%	相对于图像尺寸的百分比值：图像的宽度影响水平偏移，高度影响垂直偏移
fill	保留边框图像的中间部分

border-image-width 属性规定图像边框的宽度
border-image-width 属性的四个之规定将边框图像分割为九个部分的偏移。它们代表了从区域的上、右、下、左侧向内的距离。如果忽略第四个值，则与第二个值相同。
如果省略第三个值，则与第一个值相同。如果省略第二个值，则与第一个值相同。不允许任何负值作为 border-image-width 值
number	代表对应的 border-width 的倍数。
%	参考边框图像区域的尺寸：区域的高度影响水平偏移，宽度影响垂直偏移。
auto	如果规定该属性，则宽度为对应的图像切片的固有宽度

border-image-outset 属性规定边框图像超过边框盒的量。不允许任何负值
length	
number	代表对应的 border-width 的倍数

border-image-repeat 属性规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）
规定如何延展和铺排边框图像的边缘和中间部分。因此，您可以规定两个值。如果省略第二个值，则采取与第一个值相同的值
stretch	拉伸图像来填充区域
repeat	平铺（重复）图像来填充区域（从中间向两侧按原边框图片大小平铺，因此可能图案会不完整）
round	类似 repeat 值。如果无法完整平铺所有图像，则对图像进行缩放以适应区域
（图像从中间向两侧平铺，会调整背景图片大小保证图像完整，可能有多个，但每个都是完整的）

border-radius 属性是一个简写属性，用于设置四个 border-*-radius 属性
border-radius: 1-4 length|%（四个角按顺序设置水平半径） / 1-4 length|%（四个角按顺序设置垂直半径）;
border-radius: 2em 1em 4em / 0.5em 3em;
等价于：
border-top-left-radius: 2em 0.5em;
border-top-right-radius: 1em 3em;
border-bottom-right-radius: 4em 0.5em;
border-bottom-left-radius: 1em 3em;

border-bottom-left-radius 属性的长度值和百分比值定义四分之一椭圆（定义外部边框边缘的边角形状）的半径（radii）。
第一个值是水平半径，第二个值是垂直半径。如果省略第二个值，则复制第一个值。
如果长度为零，则边角为方形，而不是圆形。水平半径的百分比值参考边框盒的宽度，而垂直半径的百分比值参考边框盒的高度

box-shadow 属性向框添加一个或多个阴影
box-shadow: h-shadow v-shadow blur spread color inset;
h-shadow	必需。水平阴影的位置。允许负值(左上右上等阴影效果）
v-shadow	必需。垂直阴影的位置。允许负值
blur	可选。模糊距离（大小，单位px）
spread	可选。阴影的尺寸
color	可选。阴影的颜色。请参阅 CSS 颜色值
inset	可选。将外部阴影 (outset) 改为内部阴影

background-size 属性规定背景图像的尺寸
length	设置背景图像的高度和宽度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 "auto"。
percentage	以父元素的百分比来设置背景图像的宽度和高度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 "auto"。
cover 把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区域中。
contain	把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域
在no-repeat情况下，如果容器宽高比与图片宽高比不同，
cover：图片宽高比不变、铺满整个容器的宽高，而图片多出的部分则会被截掉；
contain:图片自身的宽高比不变，缩放至图片自身能完全显示出来，所以容器会有留白区域；
在repeat情况下：cover:与上述相同；contain:容器内至少有一张完整的图，容器留白区域则平铺背景图，铺不下的再裁掉

background-origin 属性规定 background-position 属性相对于什么位置来定位
注释：如果背景图像的 background-attachment 属性为 "fixed"，则该属性没有效果
background-origin: padding-box|border-box|content-box;

background-clip 属性规定背景的绘制区域
background-clip: border-box|padding-box|content-box;

设置多重背景：background-repeat:no repeat; 和 background-position合用

text-shadow 属性向文本设置阴影
text-shadow: h-shadow v-shadow blur color;

hanging-punctuation 属性规定把标点符号放在文本整行的开头还是结尾的行框之外
hanging-punctuation: none|first|last|allow-end|force-end;
none	不在文本整行的开头还是结尾的行框之外放置标签符号
first	标点附着在首行开始边缘之外
last	标点附着在首行结尾边缘之外
force-end 行尾的停止符或逗号挂起
allow-end 如果在对齐之前不适合，则行尾的停止符或逗号会挂起

punctuation-trim 属性规定如果标点位于行开头或结尾处，或者临近另一个全角标点符号，是否对标点符号进行修剪
none	请勿修剪打开或关闭标点符号
start	在每一行的开头放置开头标点符号
end	在每一行的末尾修剪结束标点符号
allow-end	如果另有不适合之前的理由，修剪每行末尾的结束标点符号。
adjacent	若以前相邻字符修剪开口punctuation是一个全形开口，中间或结束标点符号，或表意文字空间。
修剪结束标点符号，如果下一个相邻的字符是一个全形关闭或中间punctuation，或表意文字空间

text-emphasis 属性是简写属性，用于在一个声明中设置 text-emphasis-style 和 text-emphasis-color
text-emphasis: text-emphasis-style text-emphasis-color;

text-justify 属性规定当 text-align 被设置为justify时的齐行方法（缩放窗口会自行调整）
auto	浏览器决定齐行算法
none	禁用齐行
inter-word	增加/减少单词间的间隔
inter-ideograph	用表意文本来排齐内容
inter-cluster	只对不包含内部单词间隔的内容（比如亚洲语系）进行排齐
distribute	类似报纸版面，除了在东亚语系中最后一行是不齐行的
kashida	通过拉伸字符来排齐内容

text-outline 属性规定文本轮廓
text-outline: thickness blur color;
thickness	必需。轮廓的粗细
blur	可选。轮廓的模糊半径
color	必需。轮廓的颜色

text-overflow 属性规定当文本溢出包含元素时发生的事情
clip	修剪文本
ellipsis	显示省略符号来代表被修剪的文本
string	使用给定的字符串来代表被修剪的文本

text-wrap 属性规定文本的换行（折行）规则
normal	只在允许的换行点进行换行。
none	不换行。元素无法容纳的文本会溢出。
unrestricted	在任意两个字符间换行。
suppress	压缩元素中的换行。浏览器只在行中没有其他有效换行点时进行换行

word-break 属性规定自动换行的处理方法(规定非中日韩文本的换行规则)(会在同行进行断词）
normal	使用浏览器默认的换行规则
break-all	允许在单词内换行(没有连字符，单词直接折两半）
keep-all	只能在半角空格或连字符处换行

word-wrap 属性允许长单词或 URL 地址换行到下一行（换到下一行，再断）
normal	只在允许的断字点换行（浏览器保持默认处理）
break-word	在长单词或 URL 地址内部进行换行

在 CSS3 之前，web 设计师必须使用已在用户计算机上安装好的字体
将该字体文件存放到 web 服务器上，它会在需要时被自动下载到用户的计算机上。您“自己的”的字体是在 CSS3 @font-face 规则中定义的
@font-face{
  font-family: myFirstFont;
  src: url('Sansation_Light.ttf'),
       url('Sansation_Light.eot'); /* IE9+ */
}

div{
  font-family:myFirstFont;
}
font-family 必需。规定字体的名称。
src	必需。定义字体文件的 URL。
font-stretch	normal|condensed|ultra-condensed|extra-condensed|semi-condensed|expanded|semi-expanded|extra-expanded|ultra-expanded
可选。定义如何拉伸字体。默认是 "normal"。
font-style	normal|italic|oblique可选。定义字体的样式。默认是 "normal"。
font-weight	normal|bold|100|200|300|400|500|600|700|800|900可选。定义字体的粗细。默认是 "normal"。
unicode-range	unicode-range	可选。定义字体支持的 UNICODE 字符范围。默认是 "U+0-10FFFF"

必须为粗体文本添加另一个包含描述符的 @font-face（因为引用的是分类的小字体，所以需要再引用，直接引用Sansation.ttf就不用）
@font-face
{
font-family: myFirstFont;
src: url('/example/css3/Sansation_Light.ttf')
    ,url('/example/css3/Sansation_Light.eot'); /* IE9+ */
}
@font-face
{
font-family: myFirstFont;
src: url('/example/css3/Sansation_Bold.ttf')
    ,url('/example/css3/Sansation_Bold.eot'); /* IE9+ */
font-weight:bold;
}

transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜
matrix(n,n,n,n,n,n)	定义 2D 转换，使用六个值的矩阵。
translate(x,y)	定义 2D 转换，沿着 X 和 Y 轴移动元素。
translateX(n)	定义 2D 转换，沿着 X 轴移动元素。
translateY(n)	定义 2D 转换，沿着 Y 轴移动元素。
scale(x,y)	定义 2D 缩放转换，改变元素的宽度和高度。
scaleX(n)	定义 2D 缩放转换，改变元素的宽度。
scaleY(n)	定义 2D 缩放转换，改变元素的高度。
rotate(angle)	定义 2D 旋转，在参数中规定角度。
skew(x-angle,y-angle)	定义 2D 倾斜转换，沿着 X 和 Y 轴
skewX(angle)	定义 2D 倾斜转换，沿着 X 轴
skewY(angle)	定义 2D 倾斜转换，沿着 Y 轴

transform-origin 属性允许您改变被转换元素的位置(基点旋转)
默认值50% 50%
x-axis	定义视图被置于 X 轴的何处。可能的值：left|center|right|length|%
y-axis	定义视图被置于 Y 轴的何处。可能的值：top|center|bottom|length|%
z-axis	定义视图被置于 Z 轴的何处。可能的值：length

transform-style 属性规定如何在 3D 空间中呈现被嵌套的元素
注释：该属性必须与 transform 属性一同使用
flat	子元素将不保留其 3D 位置 如果选择平面，元素的子元素将不会有 3D 的遮挡关系（子元素会全部显示出来，不遮盖）
preserve-3d	子元素将保留其 3D 位置（会遮盖）

perspective 属性定义 3D 元素距视图的距离，以像素计。该属性允许您改变 3D 元素查看 3D 元素的视图(见书签）
当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身
number	元素距离视图的距离，以像素计
none	默认值。与 0 相同。不设置透视
如果值为0或为负数，则不应用透视变换
perspective属性设置镜头到元素平面的距离。所有元素都是放置在z=0的平面上。比如perspective(300px)表示，镜头距离元素表面的位置是300像素
perspective-origin 和perspective特性被附接到在3维空间变换的孩子的父母，不同于perspective()被变换，其被放置在元件上变换函数

perspective-origin 属性定义 3D 元素所基于的 X 轴和 Y 轴。该属性允许您改变 3D 元素的底部位置（在顶部根据位置调整“机位”拍物体）
当为元素定义 perspective-origin 属性时，其子元素会获得透视效果，而不是元素本身
默认值：	50% 50%
perspective-origin: x-axis y-axis;
x-axis	定义视图被置于 X 轴的何处。可能的值：left（0%）|center（关键字是50%百分比值的快捷方式）|right（100%）|length|%
y-axis	定义视图被置于 Y 轴的何处。可能的值：top（0%）|center（关键字是50%百分比值的快捷方式）|bottom（100%）|length|%

backface-visibility 属性定义当元素不面向屏幕时是否可见。如果在旋转元素不希望看到其背面时，该属性很有用（背面向屏幕才有效，rotateY(大于90deg）)
backface-visibility: visible|hidden;

matrix(n,n,n,n,n,n)	定义 2D 转换，使用六个值的矩阵
matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)	定义 3D 转换，使用 16 个值的 4x4 矩阵

transition 属性是一个简写属性，用于设置四个过渡属性：
transition-property
transition-duration
transition-timing-function
transition-delay

transition-property 属性规定应用过渡效果的 CSS 属性的名称。（当指定的 CSS 属性改变时，过渡效果将开始）
none	没有属性会获得过渡效果。
all	所有属性都将获得过渡效果。
property	定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔

transition-duration 属性规定完成过渡效果需要花费的时间（以秒或毫秒计）
transition-timing-function 属性规定过渡效果的速度曲线。该属性允许过渡效果随着时间来改变其速度
linear	规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。
ease	规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。
ease-in	规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。
ease-out	规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。
ease-in-out	规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。
cubic-bezier(n,n,n,n)	在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值

transition-delay 属性规定过渡效果何时开始。transition-delay 值以秒或毫秒计（开始和变回去都会延迟(hover)(变状态的时候都会延迟））

@keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果
当您在 @keyframes 中创建动画时，请把它捆绑到某个选择器，否则不会产生动画效果。
@keyframes myfirst
{
from {background: red;}
to {background: yellow;}
}
通过规定至少以下两项 CSS3 动画属性，即可将动画绑定到选择器：
规定动画的名称
规定动画的时长
把 "myfirst" 动画捆绑到 div 元素，时长：5 秒：
div
{
animation: myfirst 5s;
-moz-animation: myfirst 5s;	/* Firefox */
-webkit-animation: myfirst 5s;	/* Safari 和 Chrome */
-o-animation: myfirst 5s;	/* Opera */
}

用百分比来规定变化发生的时间，或用关键词 "from" 和 "to"，等同于 0% 和 100%
@keyframes animationname {keyframes-selector {css-styles;}}
animationname	必需。定义动画的名称。
keyframes-selector	必需。动画时长的百分比。合法的值：
0-100%
from（与 0% 相同）
to（与 100% 相同）
css-styles	必需。一个或多个合法的 CSS 样式属性

animation 属性是一个简写属性，用于设置六个动画属性：
animation-name
animation-duration
animation-timing-function
animation-delay
animation-iteration-count
animation-direction

animation-name 属性为 @keyframes 动画规定名称
keyframename	规定需要绑定到选择器的 keyframe 的名称
none	规定无动画效果（可用于覆盖来自级联的动画）

animation-delay 属性定义动画何时开始。animation-delay 值以秒或毫秒计
允许负值，-2s 使动画马上开始，但跳过 2 秒进入动画

animation-iteration-count 属性定义动画的播放次数
n	定义动画播放次数的数值
infinite	规定动画应该无限次播放

animation-direction 属性定义是否应该轮流反向播放动画
如果 animation-direction 值是 "alternate"，则动画会在奇数次数（1、3、5 等等）正常播放，而在偶数次数（2、4、6 等等）向后播放
注释：如果把动画设置为只播放一次，则该属性没有效果
normal	默认值。动画应该正常播放。	测试
alternate	动画应该轮流反向播放

animation-play-state 属性规定动画正在运行还是暂停
注释：您可以在 JavaScript 中使用该属性，这样就能在播放过程中暂停动画
paused	规定动画已暂停
running	规定动画正在播放（默认值）

animation-fill-mode 属性规定动画在播放之前或之后，其动画效果是否可见
注释：其属性值是由逗号分隔的一个或多个填充模式关键词
none	不改变默认行为 取值为none时，使用得动画不会对动画等待和动画完成的元素样式产生改变
forwards	当动画完成后，保持最后一个属性值（在最后一个关键帧中定义），动画结束后，元素的样式将设置为动画的最后一帧的样式（保留最后的形态）
backwards	在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）
在动画等待的那段时间内，元素的样式将设置为动画第一帧的样式
both	向前和向后填充模式都被应用，相当于同时配置了backwards和forwards，意味着在动画等待和动画结束状态，元素将分别应用动画第一帧和最后一帧的样式

像报纸一样的排版：
columns 属性是一个简写属性，用于设置列宽和列数
columns: column-width column-count;

column-count 属性规定元素应该被划分的列数
number	元素内容将被划分的最佳列数
auto	由其他属性决定列数，比如 "column-width"

column-fill 属性规定如何填充列（是否进行协调）（列长进行调整）
balance	对列进行协调。浏览器应对列长度的差异进行最小化处理
auto	按顺序对列进行填充，列长度会各有不同

column-gap 属性规定列之间的间隔
length	把列间的间隔设置为指定的长度
normal	规定列间间隔为一个常规的间隔。W3C 建议的值是 1em

column-rule 属性是一个简写属性，用于设置所有 column-rule-* 属性
column-rule: column-rule-width column-rule-style column-rule-color;

column-rule-color 属性规定列之间的颜色规则（列之间的分割条）
column-rule-style 属性规定列之间的样式规则（列之间的分割条）
none	定义没有规则
hidden	定义隐藏规则
dotted	定义点状规则
dashed	定义虚线规则
solid	定义实线规则
double	定义双线规则
groove	定义 3D grooved 规则。该效果取决于宽度和颜色值	
ridge	定义 3D ridged 规则。该效果取决于宽度和颜色值
inset	定义 3D inset 规则。该效果取决于宽度和颜色值
outset	定义 3D outset 规则。该效果取决于宽度和颜色值
column-rule-width 属性规定列之间的宽度规则（列之间的分割条）
thin	定义纤细规则
medium	定义中等规则
thick	定义宽厚规则
length	规定规则的宽度

column-span 属性规定元素应横跨多少列
all	元素应横跨所有列
numer 自定义 默认是1

column-width 属性规定列的宽度
auto	由浏览器决定列宽
length	规定列的宽度
对象会按指定的column-count减去（column-count - 1）*column-gap宽度的所有列间距后将剩余宽度"column-count等分"
column-width的作用是当它大于一列的宽度时使对象“降列显示”。降列显示即是对象会显示比原先少一的列数。举例如下：
假设 对象（文本之类的） width:700px;font-size:14px;column-count:4;每一列宽度w1=[700-(4-1)*14]/4=164.5px，
当column-width<=w1时按指定的4列显示，否则降列显示，首次降列column-count减为3，column-gap数量减为2，重新计算每一列宽度w2=[700-(3-1)*14]/3=224px，
当column-width<=w2使按新的3列显示，否则再次降列显示，以此类推

appearance 属性允许您使元素看上去像标准的用户界面元素
normal	将元素呈现为常规元素
icon	将元素呈现为图标（小图片）
window	将元素呈现为视口
button	将元素呈现为按钮
menu	将元素呈现为一套供用户选择的选项
field	将元素呈现为输入字段

box-sizing 属性
content-box 是默认值。如果你设置一个元素的宽为100px，那么这个元素的内容区会有100px 宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。
border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在width内的。也就是说，如果你将一个元素的width设为100px，
那么这100px会包含它的border和padding，内容区的实际宽度是width减去(border + padding)的值。大多数情况下，这使得我们更容易地设定一个元素的宽高

icon 属性为创作者提供了将元素设置为图标等价物的能力
注释：除非 "content" 属性的值被设置为 "icon"，否则元素的图标不会被使用
img{
  content:icon;
  icon:url(imgicon.png);
}
auto	使用由浏览器提供的默认通用图标
URL	引用列表中的一个或多个图标，列表用逗号分隔

nav-down 属性规定当使用 nav-down 导航键时，向何处进行导航（键盘上的箭头）
auto	浏览器决定导航到哪个元素。
id	规定被导航元素的 id。
target-name	规定被导航的目标框架
button#b1{
top:20%;left:25%;
nav-index:1;
nav-right:#b2;nav-left:#b4;
nav-down:#b2;nav-up:#b4;
}
<button id="b1">Button 1</button>
以上代码意思是当前在button1时，按左和上方向键就会定位到button4，右和下就会定位到button2

nav-index 属性规定元素的连续导航次序 ("tabbing order")
auto	由浏览器分配元素的导航键控制次序
number	指示元素的导航键控制次序。1 代表第一个
根据按导航键的次数定位，设置元素的 tab 键控制次序

outline-offset 属性对轮廓进行偏移，并在边框边缘进行绘制。
轮廓在两方面与边框不同：
轮廓不占用空间
轮廓可能是非矩形
outline-offset: length|inherit;

resize 属性规定是否可由用户调整元素的尺寸
注释：如果希望此属性生效，需要设置元素的 overflow 属性，值可以是 auto、hidden 或 scroll
none	用户无法调整元素的尺寸
both	用户可调整元素的高度和宽度
horizontal	用户可调整元素的宽度
vertical	用户可调整元素的高度

overflow-x 属性规定是否对内容的左/右边缘进行裁剪 - 如果溢出元素内容区域的话
overflow-x: visible|hidden|scroll|auto|no-display|no-content;
no-display	如果内容不适合内容框，则删除整个框
no-content	如果内容不适合内容框，则隐藏整个内容

overflow-style 规定溢出元素的首选滚动方法
注释：值既可以是 auto，或者是按照优先次序的方法列表。浏览器应该使用列表中其支持的的第一个滚动方法
overflow-style: auto|scrollbar|panner|move|marquee;
auto	
scrollbar	为溢出元素添加滚动条。
panner	
move	用户能够直接移动元素的内容。通常，用户能够用鼠标拖动内容。
marquee	内容自主移动，不需任何用户代理对其控制

rotation 属性围绕由 rotation-point 属性定义的指定点，对块级元素进行逆时针旋转
提示：边框、内边距、内容以及背景（非固定）也会被旋转！
angle	元素旋转角度。可能的值：0deg 到 360deg

rotation-point 属性是一对值，定义从上左边框边缘进行偏移的点
默认值：	50% 50%
left top
left center
left bottom
right top
right center
right bottom
center top
center center
center bottom
如果只规定一个关键词，则第二个值将是 "center"
x% y%	百分比值，参考边框盒宽度和高度

使用box-*前，父元素设置display:box/inline-box;
box-align 属性规定如何对齐框的子元素(竖直）
start	对于正常方向的框，每个子元素的上边缘沿着框的顶边放置。对于反方向的框，每个子元素的下边缘沿着框的底边放置。
end	对于正常方向的框，每个子元素的下边缘沿着框的底边放置。对于反方向的框，每个子元素的上边缘沿着框的顶边放置。
center	均等地分割多余的空间，一半位于子元素之上，另一半位于子元素之下
baseline	如果 box-orient 是inline-axis或horizontal，所有子元素均与其基线对齐
stretch	拉伸子元素以填充包含块

box-direction 属性规定框元素的子元素以什么方向来排列(框也反过来,根据box-pack决定对齐)
normal	以默认方向显示子元素
reverse	以反方向显示子元素(所有子元素的顺序颠倒，例：<p id="p1"></p><p id="p2"></p>变成<p id="p2"></p><p id="p1"></p>

box-flex 属性规定框的子元素是否可伸缩其尺寸（写在子元素上）
提示：可伸缩元素能够随着框的缩小或扩大而缩写或放大。只要框中有多余的空间，可伸缩元素就会扩展来填充这些空间
默认值：	0.0（指示该元素不可伸缩）
value	元素的可伸缩行。柔性是相对的，例如 box-flex 为 2 的子元素两倍于 box-flex 为 1 的子元素

box-flex-group 属性用于向柔性分组分配可伸缩元素
integer	一个整数。（第一个柔性分组是 1，后面的柔性分组是更大的值）

box-lines 属性规定如果列超出了父框中的空间，是否要换行显示
提示：默认地，水平框会在单独的行中排列其子元素，而垂直框会在单独的列中排列其子元素
single	所有子元素会被放置在单独的行或列中。（无法匹配的元素会被视为溢出）
multiple	允许框扩展为多行，以容纳其所有子元素

box-orient 属性规定框的子元素应该被水平或垂直排列
水平框中的子元素从左向右进行显示，而垂直框的子元素从上向下进行显示。不过，box-direction 和 box-ordinal-group 能够改变这种顺序
horizontal	在水平行中从左向右排列子元素
vertical	从上向下垂直排列子元素
inline-axis	沿着行内轴来排列子元素（映射为 horizontal）
block-axis	沿着块轴来排列子元素（映射为 vertical）

box-ordinal-group 属性规定框中子元素的显示次序。值更低的元素会显示在值更高的元素前面显示，注释：分组值相同的元素，它们的显示次序取决于其源次序
box-ordinal-group: integer;

box-pack 属性规定当框大于子元素的尺寸，在何处放置子元素。该属性规定水平框中的水平位置，以及垂直框中的垂直位置(水平)
start	对于正常方向的框，首个子元素的左边缘被放在左侧（最后的子元素后是所有剩余的空间）
对于相反方向的框，最后子元素(转后的即1）的右边缘被放在右侧（首个子元素（转后的即3）前是所有剩余的空间）
end	对于正常方向的框，最后子元素的右边缘被放在右侧（首个子元素前是所有剩余的空间）
对于相反方向的框，首个子元素的左边缘被放在左侧（最后子元素后是所有剩余的空间）
center	均等地分割多余空间，其中一半空间被置于首个子元素前，另一半被置于最后一个子元素后	
justify	在每个子元素之间分割多余的空间（首个子元素前和最后一个子元素后没有多余的空间）

grid-columns 属性网格中每列的宽度 grid-columns: length|%|none|inherit;（网格布局 display：grid;)
length	参考包含块的网格
%	参考包含块的宽度
具体的看csdn收藏

target 属性是一个简写属性，用于设置以下属性：
target-name
target-new
target-position
注释：target-new 和 target-position 值只有在 target-name 值创建新标签页或新窗口中有效

target-name 属性规定在何处打开超链接 (target destination)
current	在链接所在的框架、标签页或窗口中打开超链接。
root	在当前标签页或窗口中超链接。
parent	在父框架中打开超链接。如果当前框架没有父框架，则将该值视作 root。
new	创建新的目的地（参阅 target-new）。
modal	在新的（暂时创建的）模态窗口中打开新窗口。
name	在已有框架、窗口或标签页中打开链接。如果 name 目的地不存在，则用该名称创建新的目的地

target-new 属性规定在新窗口还是新标签页或已有窗口中打开新的目的地链接
window	在新窗口中打开超链接
tab	在已有窗口的新标签页中打开超链接
none	不创建新的目的地

target-position 属性规定在何处放置新的目的地链接
above	在当前标签页/窗口之前放置新的目的地标签页/窗口。
behind	在当前标签页/窗口之后放置新的目的地标签页/窗口。
front	在所有其他标签页/窗口之前放置新的目的地标签页/窗口。
back	在所有其他标签页/窗口之后放置新的目的地标签页/窗口

Marquee 属性
marquee-direction	设置移动内容的方向
marquee-play-count	设置内容移动多少次
marquee-speed	设置内容滚动得多快
marquee-style	设置移动内容的样式
